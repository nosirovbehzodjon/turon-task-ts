"use client";
import Head from "next/head";
import { Inter } from "next/font/google";
import { useState } from "react";
import { Card, Input, Pagination, Showcase } from "@/src/components";
import home from "../styles/pages/home.module.scss";
import { Grid } from "react-loader-spinner";
import useQueries from "@/src/hooks/useQueries";
import Loading from "@/src/components/loading";
import { useRouter } from "next/navigation";
const inter = Inter({ subsets: ["latin"] });
export default function Home() {
    const router = useRouter();

    const [search, setSearch] = useState("");
    const [count, setCount] = useState(1 || 1);
    const { data: movies, isLoading } = useQueries({
        main_key: "movies",
        url: `movie-list?page=${count}&items=20`,
    });
    const handleChange = (e: any) => {
        setSearch(e.target.value);
    };

    if (isLoading) {
        return <Loading />;
    }
    return (
        <>
            <Head>
                <title>Create Next App</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
                <meta
                    name="viewport"
                    content="width=device-width, initial-scale=1"
                />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <main className={home.content}>
                <div className="container">
                    <Showcase />
                    <main className="flex justify-center">
                        <div className="w-5">
                            <Input
                                onChange={handleChange}
                                title={"Search"}
                                placeholder={"Enter movie name"}
                                type={"text"}
                            />
                        </div>
                    </main>
                    <div className="other flex justify-between flex-wrap py-3">
                        {movies.data.movies
                            .filter((item: any) =>
                                item?.titleEn
                                    ? item?.titleEn
                                          .toLowerCase()
                                          .includes(search.toLowerCase())
                                    : item?.year
                                          .toString()
                                          .toLowerCase()
                                          .includes(search.toLowerCase())
                            )
                            .map((item: any) => {
                                return (
                                    <Card
                                        id={item.id}
                                        key={item.id}
                                        url={item.poster}
                                        title={item.titleEn}
                                        year={item.year}
                                    />
                                );
                            })}
                    </div>
                    <div className={"flex items-center justify-center p-1"}>
                        <Pagination
                            setCount={setCount}
                            pageCount={movies?.data.lastPage}
                        />
                    </div>
                </div>
            </main>
        </>
    );
}
